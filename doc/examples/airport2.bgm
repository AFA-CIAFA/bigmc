# We distinguish landside and airside

%active Landside : 0;
%active Airside : 0;
%active Gates : 0;

# We distinguish zone types
# The two links are [entry, exit]

%active Zone : 2;

# A gate is simply linked to a flight
%active Gate : 1;

# A passenger is linked to a flight
%passive Pax : 1;

# The database store
%active DB : 0;
%active PaxRecord : 2; # Links [passenger,gate]

# Names that represent zones
%outer CheckIn;
%outer Security;
%outer DutyFree;
%outer GateLounge;

# A gate status at the departure lounge
%outer Boarding;

# Some flights
%outer SK100;
%outer SK101;
%outer SK102;

# A passenger ID
%name Bob;
%name Joe;

# Rules that allow passengers to move through the airport
Zone[w,x].(Pax[y] | $0) || Zone[x,z].$1 -> 
	Zone[w,x].$0 || Zone[x,z].(Pax[y] | $1);


# A passenger linked to a PaxRecord can proceed to the gate
Zone[m,Boarding].(Pax[y] | $0) || Gate[x].$1 || PaxRecord[y,x] | $2 ->
	Zone[m,Boarding].$0 || Gate[x].(Pax[y] | $1) || PaxRecord[y,x] | $2;

#Zone[m,Boarding].Pax[y] || PaxRecord[y,x] -> Zone[m,Boarding] || PaxRecord[y,x];

# A passenger magically disappears once they board the aircraft
Gate[x].(Pax[y] | $0) -> Gate[x].$0;

# Passengers can spontaneously spawn

#Zone[-,CheckIn] -> Zone[-,CheckIn].Pax[Gian];

# Airport Model:

Landside.(
	Zone[-,CheckIn].(Pax[Bob] | Pax[Joe]) | 
	Zone[CheckIn,Security]
) | 
Airside.(
	Zone[Security,GateLounge] | 
	#Zone[DutyFree,GateLounge] |
	Zone[GateLounge,Boarding]
) |
Gates.(
	Gate[SK100] | 
	Gate[SK102] |
	Gate[SK101]
) | DB.(
	PaxRecord[Joe,SK100] |
	PaxRecord[Bob,SK101]
);

%check
